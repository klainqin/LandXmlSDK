#if !defined(__FACTORYIMPL_H)
#define __FACTORYIMPL_H

#include "LXTypes.h"
#include "IFactory.h"
#include "DocumentImpl.h"
#include "FactoryBaseImpl.h"

namespace LX
{
class DesignCrossSectSurfCollection;
class Units;
class VolumeCollection;
class ZonesCollection;
class SurfaceCollection;
class NoPassingZone;
class RectStruct;
class Cant;
class RoadSign;
class CantStation;
class ClimbLaneCollection;
class DataPointsCollection;
class AdministrativeAreaCollection;
class BacksightCollection;
class CrossSectCollection;
class PipeNetworkCollection;
class TestObservation;
class Superelevation;
class DocFileRef;
class RetWallPnt;
class AlignmentCollection;
class RoadwayCollection;
class InSpiral;
class Annotation;
class RawObservationCollection;
class Surfaces;
class RunoffStaCollection;
class OffsetLane;
class ZoneHingeCollection;
class TurnLaneCollection;
class Curve;
class PropertyCollection;
class ChainCollection;
class UnsymParaCurve;
class GPSVector;
class GradeSurfaceCollection;
class Pnts;
class CornerCollection;
class HazardRating;
class EndofRunoutStaCollection;
class Project;
class Application;
class AdverseSE;
class HeadOfPower;
class CrashData;
class CantStationCollection;
class MapPoint;
class NoPassingZoneCollection;
class CurbCollection;
class Center;
class ZoneWidthCollection;
class Parcels;
class LocationAddress;
class Intersections;
class Pipes;
class Spiral;
class RetWall;
class OffsetVals;
class Outlet;
class Equipment;
class ElliPipe;
class BridgeElement;
class CoordGeomCollection;
class VolumeGeom;
class PntList3D;
class ParcelCollection;
class MonumentsCollection;
class PipeNetworksCollection;
class SurveyCollection;
class Boundary;
class RedHorizontalPosition;
class TrafficVolume;
class Start;
class CircPipe;
class OutletCollection;
class InstrumentSetup;
class SurfVolumes;
class ZoneCutFillCollection;
class TurnSpeedCollection;
class FeatureCollection;
class HeadOfPowerCollection;
class PlanFeatures;
class RoadNameCollection;
class IntersectionCollection;
class BoundaryCollection;
class Boundaries;
class CrossSectPnt;
class AdministrativeDateCollection;
class CoordGeom;
class ObservationGroupCollection;
class AmendmentItem;
class Location;
class PipeCollection;
class TurnRestriction;
class DitchCollection;
class SurfVolumesCollection;
class AdministrativeArea;
class ClimbLane;
class ZoneCutFill;
class SpeedStation;
class DailyTrafficVolume;
class GPSPosition;
class ProfSurfCollection;
class ProfAlignCollection;
class Profile;
class PipeNetworks;
class RectPipe;
class ThruLane;
class ProfSurf;
class Author;
class CrossSectSurf;
class HazardRatingCollection;
class FullSuperelev;
class Roadway;
class SurfVolumeCollection;
class BreaklineCollection;
class EggPipe;
class Structs;
class SpeedStationCollection;
class Intersection;
class FieldNote;
class RoadSignCollection;
class AuthorCollection;
class BridgeElementCollection;
class SurfVolume;
class RoadsideCollection;
class GPSQCInfoLevel1;
class BikeFacilities;
class CgPoint;
class CrossSectSurfCollection;
class DrivewayDensity;
class Monuments;
class Corner;
class Volume;
class StartofRunoutStaCollection;
class DesignSpeedCollection;
class TargetSetupCollection;
class CircCurve;
class Title;
class DesignCrossSectSurf;
class RedVerticalObservation;
class CgPointCollection;
class ZoneCrossSectStructure;
class GPSPositionCollection;
class Classification;
class Zones;
class AlignPICollection;
class SurveyHeader;
class IntersectionsCollection;
class PostedSpeedCollection;
class LaserSetup;
class Property;
class PointFiles;
class PurposeOfSurveyCollection;
class ZoneSlope;
class PointResultsCollection;
class SurveyMonumentCollection;
class LanesCollection;
class DesignSpeed85thCollection;
class Ditch;
class Timing;
class GPSAntennaDetails;
class InstrumentPoint;
class ZoneCrossSectStructureCollection;
class TurnSpeed;
class TurnLane;
class ZoneCollection;
class TrafficVolumeCollection;
class FCollection;
class ProfAlign;
class RawObservationType;
class AddressPointCollection;
class Curve1;
class Parcel;
class Line;
class Breaklines;
class Feature;
class OutSpiral;
class Definition;
class PointFileCollection;
class F;
class LaserDetails;
class Speeds;
class OutletStruct;
class Breakline;
class Exclusions;
class PVI;
class TrafficControl;
class Watershed;
class Corrections;
class CgPointsCollection;
class LocationCollection;
class ReducedObservation;
class Watersheds;
class PlanFeatureCollection;
class CircStruct;
class FullSuperelevCollection;
class SpeedsCollection;
class InvertCollection;
class StartofRunoutSta;
class InletStruct;
class ControlChecks;
class FeatureDictionaryCollection;
class ReducedArcObservation;
class GradeModel;
class PlanFeaturesCollection;
class TargetPoint;
class DrivewayDensityCollection;
class BeginRunoutStaCollection;
class Curve2;
class DesignSpeed85th;
class PntList2D;
class MonumentCollection;
class GPSQCInfoLevel2;
class FacesCollection;
class BeginRunoffStaCollection;
class OffsetLaneCollection;
class GradeModelCollection;
class DocFileRefCollection;
class CrashHistory;
class TwoWayLeftTurnLaneCollection;
class SourceData;
class PlanFeature;
class ObstructionOffsetCollection;
class WatershedCollection;
class PntList2DCollection;
class Station;
class Invert;
class Contours;
class RoadwaysCollection;
class Lanes;
class TitleCollection;
class GPSSetupCollection;
class ZoneHinge;
class ZoneSlopeCollection;
class End;
class AlignPIs;
class AlignPI;
class DataPoints;
class FullSuperSta;
class Contour;
class AdministrativeDate;
class SurveyMonument;
class ObstructionOffset;
class GPSSetup;
class Backsight;
class PointType;
class CrossSects;
class Surface;
class Curb;
class Struct;
class CrossSectsCollection;
class TurnRestrictionCollection;
class WideningLane;
class SurveyorCertificate;
class ZoneMaterialCollection;
class P;
class WideningLaneCollection;
class IrregularLine;
class TrafficControlCollection;
class AdverseSECollection;
class TwoWayLeftTurnLane;
class PCollection;
class RawObservation;
class TargetSetup;
class Channel;
class PipeFlow;
class PassingLaneCollection;
class FieldNoteCollection;
class PointFile;
class BacksightPoint;
class LocationAddressCollection;
class PntList3DCollection;
class ExclusionsCollection;
class Personnel;
class Monument;
class ThruLaneCollection;
class AlignmentsCollection;
class Amendment;
class InstrumentDetails;
class StructFlow;
class ClassificationCollection;
class LandXML;
class AmendmentItemCollection;
class BikeFacilitiesCollection;
class Faces;
class DecisionSightDistance;
class Roadways;
class FeatureDictionary;
class ZoneWidth;
class CrashDataCollection;
class GPSVectorCollection;
class ParaCurve;
class InstrumentSetupCollection;
class RetWallPntCollection;
class CgPoints;
class ParcelsCollection;
class CrossSectPntCollection;
class CrashHistoryCollection;
class DesignHour;
class ConnSpiral;
class Alignment;
class POI;
class Alignments;
class Roadside;
class PeakHour;
class Chain;
class ObservationGroup;
class ComplexName;
class AddressPoint;
class PersonnelCollection;
class MapPointCollection;
class PointType3dReq;
class AnnotationCollection;
class PassingLane;
class ZoneMaterial;
class Metric;
class RetWallCollection;
class RunoffSta;
class ContourCollection;
class Pipe;
class EndofRunoutSta;
class BeginRunoffSta;
class PipeNetwork;
class DecisionSightDistanceCollection;
class StaEquationCollection;
class CoordinateSystem;
class AmendmentCollection;
class CrossSect;
class LaserSetupCollection;
class TimingCollection;
class PointResults;
class PostedSpeed;
class SuperelevationCollection;
class StructCollection;
class GPSReceiverDetails;
class PurposeOfSurvey;
class ProfileCollection;
class RoadName;
class Zone;
class StaEquation;
class SurfacesCollection;
class SurveyorCertificateCollection;
class GradeSurface;
class Survey;
class Imperial;
class FullSuperStaCollection;
class TestObservationCollection;
class BeginRunoutSta;
class ComplexNameCollection;
class ControlChecksCollection;
class DesignSpeed;
class Connection;
// Class : FactoryImpl
class FactoryImpl : public FactoryBaseImpl
{
public:
	// Methods
	FactoryImpl(DocumentImpl& doc);
    virtual Units* createUnits();
    virtual NoPassingZone* createNoPassingZone();
    virtual RectStruct* createRectStruct();
    virtual Cant* createCant();
    virtual RoadSign* createRoadSign();
    virtual CantStation* createCantStation();
    virtual TestObservation* createTestObservation();
    virtual Superelevation* createSuperelevation();
    virtual DocFileRef* createDocFileRef();
    virtual RetWallPnt* createRetWallPnt();
    virtual InSpiral* createInSpiral();
    virtual Annotation* createAnnotation();
    virtual Surfaces* createSurfaces();
    virtual OffsetLane* createOffsetLane();
    virtual Curve* createCurve();
    virtual UnsymParaCurve* createUnsymParaCurve();
    virtual GPSVector* createGPSVector();
    virtual Pnts* createPnts();
    virtual HazardRating* createHazardRating();
    virtual Project* createProject();
    virtual Application* createApplication();
    virtual AdverseSE* createAdverseSE();
    virtual HeadOfPower* createHeadOfPower();
    virtual CrashData* createCrashData();
    virtual MapPoint* createMapPoint();
    virtual Center* createCenter();
    virtual Parcels* createParcels();
    virtual LocationAddress* createLocationAddress();
    virtual Intersections* createIntersections();
    virtual Pipes* createPipes();
    virtual Spiral* createSpiral();
    virtual RetWall* createRetWall();
    virtual OffsetVals* createOffsetVals();
    virtual Outlet* createOutlet();
    virtual Equipment* createEquipment();
    virtual ElliPipe* createElliPipe();
    virtual BridgeElement* createBridgeElement();
    virtual VolumeGeom* createVolumeGeom();
    virtual PntList3D* createPntList3D();
    virtual Boundary* createBoundary();
    virtual RedHorizontalPosition* createRedHorizontalPosition();
    virtual TrafficVolume* createTrafficVolume();
    virtual Start* createStart();
    virtual CircPipe* createCircPipe();
    virtual InstrumentSetup* createInstrumentSetup();
    virtual SurfVolumes* createSurfVolumes();
    virtual PlanFeatures* createPlanFeatures();
    virtual Boundaries* createBoundaries();
    virtual CrossSectPnt* createCrossSectPnt();
    virtual CoordGeom* createCoordGeom();
    virtual AmendmentItem* createAmendmentItem();
    virtual Location* createLocation();
    virtual TurnRestriction* createTurnRestriction();
    virtual AdministrativeArea* createAdministrativeArea();
    virtual ClimbLane* createClimbLane();
    virtual ZoneCutFill* createZoneCutFill();
    virtual SpeedStation* createSpeedStation();
    virtual DailyTrafficVolume* createDailyTrafficVolume();
    virtual GPSPosition* createGPSPosition();
    virtual Profile* createProfile();
    virtual PipeNetworks* createPipeNetworks();
    virtual RectPipe* createRectPipe();
    virtual ThruLane* createThruLane();
    virtual ProfSurf* createProfSurf();
    virtual Author* createAuthor();
    virtual CrossSectSurf* createCrossSectSurf();
    virtual FullSuperelev* createFullSuperelev();
    virtual Roadway* createRoadway();
    virtual EggPipe* createEggPipe();
    virtual Structs* createStructs();
    virtual Intersection* createIntersection();
    virtual FieldNote* createFieldNote();
    virtual SurfVolume* createSurfVolume();
    virtual GPSQCInfoLevel1* createGPSQCInfoLevel1();
    virtual BikeFacilities* createBikeFacilities();
    virtual CgPoint* createCgPoint();
    virtual DrivewayDensity* createDrivewayDensity();
    virtual Monuments* createMonuments();
    virtual Corner* createCorner();
    virtual Volume* createVolume();
    virtual CircCurve* createCircCurve();
    virtual Title* createTitle();
    virtual DesignCrossSectSurf* createDesignCrossSectSurf();
    virtual RedVerticalObservation* createRedVerticalObservation();
    virtual ZoneCrossSectStructure* createZoneCrossSectStructure();
    virtual Classification* createClassification();
    virtual Zones* createZones();
    virtual SurveyHeader* createSurveyHeader();
    virtual LaserSetup* createLaserSetup();
    virtual Property* createProperty();
    virtual PointFiles* createPointFiles();
    virtual ZoneSlope* createZoneSlope();
    virtual Ditch* createDitch();
    virtual Timing* createTiming();
    virtual GPSAntennaDetails* createGPSAntennaDetails();
    virtual InstrumentPoint* createInstrumentPoint();
    virtual TurnSpeed* createTurnSpeed();
    virtual TurnLane* createTurnLane();
    virtual ProfAlign* createProfAlign();
    virtual RawObservationType* createRawObservationType();
    virtual Curve1* createCurve1();
    virtual Parcel* createParcel();
    virtual Line* createLine();
    virtual Breaklines* createBreaklines();
    virtual Feature* createFeature();
    virtual OutSpiral* createOutSpiral();
    virtual Definition* createDefinition();
    virtual F* createF();
    virtual LaserDetails* createLaserDetails();
    virtual Speeds* createSpeeds();
    virtual OutletStruct* createOutletStruct();
    virtual Breakline* createBreakline();
    virtual Exclusions* createExclusions();
    virtual PVI* createPVI();
    virtual TrafficControl* createTrafficControl();
    virtual Watershed* createWatershed();
    virtual Corrections* createCorrections();
    virtual ReducedObservation* createReducedObservation();
    virtual Watersheds* createWatersheds();
    virtual CircStruct* createCircStruct();
    virtual StartofRunoutSta* createStartofRunoutSta();
    virtual InletStruct* createInletStruct();
    virtual ControlChecks* createControlChecks();
    virtual ReducedArcObservation* createReducedArcObservation();
    virtual GradeModel* createGradeModel();
    virtual TargetPoint* createTargetPoint();
    virtual Curve2* createCurve2();
    virtual DesignSpeed85th* createDesignSpeed85th();
    virtual PntList2D* createPntList2D();
    virtual GPSQCInfoLevel2* createGPSQCInfoLevel2();
    virtual CrashHistory* createCrashHistory();
    virtual SourceData* createSourceData();
    virtual PlanFeature* createPlanFeature();
    virtual Station* createStation();
    virtual Invert* createInvert();
    virtual Contours* createContours();
    virtual Lanes* createLanes();
    virtual ZoneHinge* createZoneHinge();
    virtual End* createEnd();
    virtual AlignPIs* createAlignPIs();
    virtual AlignPI* createAlignPI();
    virtual DataPoints* createDataPoints();
    virtual FullSuperSta* createFullSuperSta();
    virtual Contour* createContour();
    virtual AdministrativeDate* createAdministrativeDate();
    virtual SurveyMonument* createSurveyMonument();
    virtual ObstructionOffset* createObstructionOffset();
    virtual GPSSetup* createGPSSetup();
    virtual Backsight* createBacksight();
    virtual PointType* createPointType();
    virtual CrossSects* createCrossSects();
    virtual Surface* createSurface();
    virtual Curb* createCurb();
    virtual Struct* createStruct();
    virtual WideningLane* createWideningLane();
    virtual SurveyorCertificate* createSurveyorCertificate();
    virtual P* createP();
    virtual IrregularLine* createIrregularLine();
    virtual TwoWayLeftTurnLane* createTwoWayLeftTurnLane();
    virtual RawObservation* createRawObservation();
    virtual TargetSetup* createTargetSetup();
    virtual Channel* createChannel();
    virtual PipeFlow* createPipeFlow();
    virtual PointFile* createPointFile();
    virtual BacksightPoint* createBacksightPoint();
    virtual Personnel* createPersonnel();
    virtual Monument* createMonument();
    virtual Amendment* createAmendment();
    virtual InstrumentDetails* createInstrumentDetails();
    virtual StructFlow* createStructFlow();
    virtual LandXML* createLandXML();
    virtual Faces* createFaces();
    virtual DecisionSightDistance* createDecisionSightDistance();
    virtual Roadways* createRoadways();
    virtual FeatureDictionary* createFeatureDictionary();
    virtual ZoneWidth* createZoneWidth();
    virtual ParaCurve* createParaCurve();
    virtual CgPoints* createCgPoints();
    virtual DesignHour* createDesignHour();
    virtual ConnSpiral* createConnSpiral();
    virtual Alignment* createAlignment();
    virtual POI* createPOI();
    virtual Alignments* createAlignments();
    virtual Roadside* createRoadside();
    virtual PeakHour* createPeakHour();
    virtual Chain* createChain();
    virtual ObservationGroup* createObservationGroup();
    virtual ComplexName* createComplexName();
    virtual AddressPoint* createAddressPoint();
    virtual PointType3dReq* createPointType3dReq();
    virtual PassingLane* createPassingLane();
    virtual ZoneMaterial* createZoneMaterial();
    virtual Metric* createMetric();
    virtual RunoffSta* createRunoffSta();
    virtual Pipe* createPipe();
    virtual EndofRunoutSta* createEndofRunoutSta();
    virtual BeginRunoffSta* createBeginRunoffSta();
    virtual PipeNetwork* createPipeNetwork();
    virtual CoordinateSystem* createCoordinateSystem();
    virtual CrossSect* createCrossSect();
    virtual PointResults* createPointResults();
    virtual PostedSpeed* createPostedSpeed();
    virtual GPSReceiverDetails* createGPSReceiverDetails();
    virtual PurposeOfSurvey* createPurposeOfSurvey();
    virtual RoadName* createRoadName();
    virtual Zone* createZone();
    virtual StaEquation* createStaEquation();
    virtual GradeSurface* createGradeSurface();
    virtual Survey* createSurvey();
    virtual Imperial* createImperial();
    virtual BeginRunoutSta* createBeginRunoutSta();
    virtual DesignSpeed* createDesignSpeed();
    virtual Connection* createConnection();
private:
	// Variables
	DocumentImpl& m_doc;
};
}; // namespace : LX
#endif

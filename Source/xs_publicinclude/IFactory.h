#if !defined(__IFACTORY_H)
#define __IFACTORY_H

#include "LXTypes.h"
#include "IFactoryBase.h"

namespace LX
{
class DesignCrossSectSurfCollection;
class Units;
class VolumeCollection;
class ZonesCollection;
class SurfaceCollection;
class NoPassingZone;
class RectStruct;
class Cant;
class RoadSign;
class CantStation;
class ClimbLaneCollection;
class DataPointsCollection;
class AdministrativeAreaCollection;
class BacksightCollection;
class CrossSectCollection;
class PipeNetworkCollection;
class TestObservation;
class Superelevation;
class DocFileRef;
class RetWallPnt;
class AlignmentCollection;
class RoadwayCollection;
class InSpiral;
class Annotation;
class RawObservationCollection;
class Surfaces;
class RunoffStaCollection;
class OffsetLane;
class ZoneHingeCollection;
class TurnLaneCollection;
class Curve;
class PropertyCollection;
class ChainCollection;
class UnsymParaCurve;
class GPSVector;
class GradeSurfaceCollection;
class Pnts;
class CornerCollection;
class HazardRating;
class EndofRunoutStaCollection;
class Project;
class Application;
class AdverseSE;
class HeadOfPower;
class CrashData;
class CantStationCollection;
class MapPoint;
class NoPassingZoneCollection;
class CurbCollection;
class Center;
class ZoneWidthCollection;
class Parcels;
class LocationAddress;
class Intersections;
class Pipes;
class Spiral;
class RetWall;
class OffsetVals;
class Outlet;
class Equipment;
class ElliPipe;
class BridgeElement;
class CoordGeomCollection;
class VolumeGeom;
class PntList3D;
class ParcelCollection;
class MonumentsCollection;
class PipeNetworksCollection;
class SurveyCollection;
class Boundary;
class RedHorizontalPosition;
class TrafficVolume;
class Start;
class CircPipe;
class OutletCollection;
class InstrumentSetup;
class SurfVolumes;
class ZoneCutFillCollection;
class TurnSpeedCollection;
class FeatureCollection;
class HeadOfPowerCollection;
class PlanFeatures;
class RoadNameCollection;
class IntersectionCollection;
class BoundaryCollection;
class Boundaries;
class CrossSectPnt;
class AdministrativeDateCollection;
class CoordGeom;
class ObservationGroupCollection;
class AmendmentItem;
class Location;
class PipeCollection;
class TurnRestriction;
class DitchCollection;
class SurfVolumesCollection;
class AdministrativeArea;
class ClimbLane;
class ZoneCutFill;
class SpeedStation;
class DailyTrafficVolume;
class GPSPosition;
class ProfSurfCollection;
class ProfAlignCollection;
class Profile;
class PipeNetworks;
class RectPipe;
class ThruLane;
class ProfSurf;
class Author;
class CrossSectSurf;
class HazardRatingCollection;
class FullSuperelev;
class Roadway;
class SurfVolumeCollection;
class BreaklineCollection;
class EggPipe;
class Structs;
class SpeedStationCollection;
class Intersection;
class FieldNote;
class RoadSignCollection;
class AuthorCollection;
class BridgeElementCollection;
class SurfVolume;
class RoadsideCollection;
class GPSQCInfoLevel1;
class BikeFacilities;
class CgPoint;
class CrossSectSurfCollection;
class DrivewayDensity;
class Monuments;
class Corner;
class Volume;
class StartofRunoutStaCollection;
class DesignSpeedCollection;
class TargetSetupCollection;
class CircCurve;
class Title;
class DesignCrossSectSurf;
class RedVerticalObservation;
class CgPointCollection;
class ZoneCrossSectStructure;
class GPSPositionCollection;
class Classification;
class Zones;
class AlignPICollection;
class SurveyHeader;
class IntersectionsCollection;
class PostedSpeedCollection;
class LaserSetup;
class Property;
class PointFiles;
class PurposeOfSurveyCollection;
class ZoneSlope;
class PointResultsCollection;
class SurveyMonumentCollection;
class LanesCollection;
class DesignSpeed85thCollection;
class Ditch;
class Timing;
class GPSAntennaDetails;
class InstrumentPoint;
class ZoneCrossSectStructureCollection;
class TurnSpeed;
class TurnLane;
class ZoneCollection;
class TrafficVolumeCollection;
class FCollection;
class ProfAlign;
class RawObservationType;
class AddressPointCollection;
class Curve1;
class Parcel;
class Line;
class Breaklines;
class Feature;
class OutSpiral;
class Definition;
class PointFileCollection;
class F;
class LaserDetails;
class Speeds;
class OutletStruct;
class Breakline;
class Exclusions;
class PVI;
class TrafficControl;
class Watershed;
class Corrections;
class CgPointsCollection;
class LocationCollection;
class ReducedObservation;
class Watersheds;
class PlanFeatureCollection;
class CircStruct;
class FullSuperelevCollection;
class SpeedsCollection;
class InvertCollection;
class StartofRunoutSta;
class InletStruct;
class ControlChecks;
class FeatureDictionaryCollection;
class ReducedArcObservation;
class GradeModel;
class PlanFeaturesCollection;
class TargetPoint;
class DrivewayDensityCollection;
class BeginRunoutStaCollection;
class Curve2;
class DesignSpeed85th;
class PntList2D;
class MonumentCollection;
class GPSQCInfoLevel2;
class FacesCollection;
class BeginRunoffStaCollection;
class OffsetLaneCollection;
class GradeModelCollection;
class DocFileRefCollection;
class CrashHistory;
class TwoWayLeftTurnLaneCollection;
class SourceData;
class PlanFeature;
class ObstructionOffsetCollection;
class WatershedCollection;
class PntList2DCollection;
class Station;
class Invert;
class Contours;
class RoadwaysCollection;
class Lanes;
class TitleCollection;
class GPSSetupCollection;
class ZoneHinge;
class ZoneSlopeCollection;
class End;
class AlignPIs;
class AlignPI;
class DataPoints;
class FullSuperSta;
class Contour;
class AdministrativeDate;
class SurveyMonument;
class ObstructionOffset;
class GPSSetup;
class Backsight;
class PointType;
class CrossSects;
class Surface;
class Curb;
class Struct;
class CrossSectsCollection;
class TurnRestrictionCollection;
class WideningLane;
class SurveyorCertificate;
class ZoneMaterialCollection;
class P;
class WideningLaneCollection;
class IrregularLine;
class TrafficControlCollection;
class AdverseSECollection;
class TwoWayLeftTurnLane;
class PCollection;
class RawObservation;
class TargetSetup;
class Channel;
class PipeFlow;
class PassingLaneCollection;
class FieldNoteCollection;
class PointFile;
class BacksightPoint;
class LocationAddressCollection;
class PntList3DCollection;
class ExclusionsCollection;
class Personnel;
class Monument;
class ThruLaneCollection;
class AlignmentsCollection;
class Amendment;
class InstrumentDetails;
class StructFlow;
class ClassificationCollection;
class LandXML;
class AmendmentItemCollection;
class BikeFacilitiesCollection;
class Faces;
class DecisionSightDistance;
class Roadways;
class FeatureDictionary;
class ZoneWidth;
class CrashDataCollection;
class GPSVectorCollection;
class ParaCurve;
class InstrumentSetupCollection;
class RetWallPntCollection;
class CgPoints;
class ParcelsCollection;
class CrossSectPntCollection;
class CrashHistoryCollection;
class DesignHour;
class ConnSpiral;
class Alignment;
class POI;
class Alignments;
class Roadside;
class PeakHour;
class Chain;
class ObservationGroup;
class ComplexName;
class AddressPoint;
class PersonnelCollection;
class MapPointCollection;
class PointType3dReq;
class AnnotationCollection;
class PassingLane;
class ZoneMaterial;
class Metric;
class RetWallCollection;
class RunoffSta;
class ContourCollection;
class Pipe;
class EndofRunoutSta;
class BeginRunoffSta;
class PipeNetwork;
class DecisionSightDistanceCollection;
class StaEquationCollection;
class CoordinateSystem;
class AmendmentCollection;
class CrossSect;
class LaserSetupCollection;
class TimingCollection;
class PointResults;
class PostedSpeed;
class SuperelevationCollection;
class StructCollection;
class GPSReceiverDetails;
class PurposeOfSurvey;
class ProfileCollection;
class RoadName;
class Zone;
class StaEquation;
class SurfacesCollection;
class SurveyorCertificateCollection;
class GradeSurface;
class Survey;
class Imperial;
class FullSuperStaCollection;
class TestObservationCollection;
class BeginRunoutSta;
class ComplexNameCollection;
class ControlChecksCollection;
class DesignSpeed;
class Connection;
// Class : IFactory
class IFactory : public IFactoryBase
{
public:
	// Methods
    virtual Units* createUnits() = 0;
    virtual NoPassingZone* createNoPassingZone() = 0;
    virtual RectStruct* createRectStruct() = 0;
    virtual Cant* createCant() = 0;
    virtual RoadSign* createRoadSign() = 0;
    virtual CantStation* createCantStation() = 0;
    virtual TestObservation* createTestObservation() = 0;
    virtual Superelevation* createSuperelevation() = 0;
    virtual DocFileRef* createDocFileRef() = 0;
    virtual RetWallPnt* createRetWallPnt() = 0;
    virtual InSpiral* createInSpiral() = 0;
    virtual Annotation* createAnnotation() = 0;
    virtual Surfaces* createSurfaces() = 0;
    virtual OffsetLane* createOffsetLane() = 0;
    virtual Curve* createCurve() = 0;
    virtual UnsymParaCurve* createUnsymParaCurve() = 0;
    virtual GPSVector* createGPSVector() = 0;
    virtual Pnts* createPnts() = 0;
    virtual HazardRating* createHazardRating() = 0;
    virtual Project* createProject() = 0;
    virtual Application* createApplication() = 0;
    virtual AdverseSE* createAdverseSE() = 0;
    virtual HeadOfPower* createHeadOfPower() = 0;
    virtual CrashData* createCrashData() = 0;
    virtual MapPoint* createMapPoint() = 0;
    virtual Center* createCenter() = 0;
    virtual Parcels* createParcels() = 0;
    virtual LocationAddress* createLocationAddress() = 0;
    virtual Intersections* createIntersections() = 0;
    virtual Pipes* createPipes() = 0;
    virtual Spiral* createSpiral() = 0;
    virtual RetWall* createRetWall() = 0;
    virtual OffsetVals* createOffsetVals() = 0;
    virtual Outlet* createOutlet() = 0;
    virtual Equipment* createEquipment() = 0;
    virtual ElliPipe* createElliPipe() = 0;
    virtual BridgeElement* createBridgeElement() = 0;
    virtual VolumeGeom* createVolumeGeom() = 0;
    virtual PntList3D* createPntList3D() = 0;
    virtual Boundary* createBoundary() = 0;
    virtual RedHorizontalPosition* createRedHorizontalPosition() = 0;
    virtual TrafficVolume* createTrafficVolume() = 0;
    virtual Start* createStart() = 0;
    virtual CircPipe* createCircPipe() = 0;
    virtual InstrumentSetup* createInstrumentSetup() = 0;
    virtual SurfVolumes* createSurfVolumes() = 0;
    virtual PlanFeatures* createPlanFeatures() = 0;
    virtual Boundaries* createBoundaries() = 0;
    virtual CrossSectPnt* createCrossSectPnt() = 0;
    virtual CoordGeom* createCoordGeom() = 0;
    virtual AmendmentItem* createAmendmentItem() = 0;
    virtual Location* createLocation() = 0;
    virtual TurnRestriction* createTurnRestriction() = 0;
    virtual AdministrativeArea* createAdministrativeArea() = 0;
    virtual ClimbLane* createClimbLane() = 0;
    virtual ZoneCutFill* createZoneCutFill() = 0;
    virtual SpeedStation* createSpeedStation() = 0;
    virtual DailyTrafficVolume* createDailyTrafficVolume() = 0;
    virtual GPSPosition* createGPSPosition() = 0;
    virtual Profile* createProfile() = 0;
    virtual PipeNetworks* createPipeNetworks() = 0;
    virtual RectPipe* createRectPipe() = 0;
    virtual ThruLane* createThruLane() = 0;
    virtual ProfSurf* createProfSurf() = 0;
    virtual Author* createAuthor() = 0;
    virtual CrossSectSurf* createCrossSectSurf() = 0;
    virtual FullSuperelev* createFullSuperelev() = 0;
    virtual Roadway* createRoadway() = 0;
    virtual EggPipe* createEggPipe() = 0;
    virtual Structs* createStructs() = 0;
    virtual Intersection* createIntersection() = 0;
    virtual FieldNote* createFieldNote() = 0;
    virtual SurfVolume* createSurfVolume() = 0;
    virtual GPSQCInfoLevel1* createGPSQCInfoLevel1() = 0;
    virtual BikeFacilities* createBikeFacilities() = 0;
    virtual CgPoint* createCgPoint() = 0;
    virtual DrivewayDensity* createDrivewayDensity() = 0;
    virtual Monuments* createMonuments() = 0;
    virtual Corner* createCorner() = 0;
    virtual Volume* createVolume() = 0;
    virtual CircCurve* createCircCurve() = 0;
    virtual Title* createTitle() = 0;
    virtual DesignCrossSectSurf* createDesignCrossSectSurf() = 0;
    virtual RedVerticalObservation* createRedVerticalObservation() = 0;
    virtual ZoneCrossSectStructure* createZoneCrossSectStructure() = 0;
    virtual Classification* createClassification() = 0;
    virtual Zones* createZones() = 0;
    virtual SurveyHeader* createSurveyHeader() = 0;
    virtual LaserSetup* createLaserSetup() = 0;
    virtual Property* createProperty() = 0;
    virtual PointFiles* createPointFiles() = 0;
    virtual ZoneSlope* createZoneSlope() = 0;
    virtual Ditch* createDitch() = 0;
    virtual Timing* createTiming() = 0;
    virtual GPSAntennaDetails* createGPSAntennaDetails() = 0;
    virtual InstrumentPoint* createInstrumentPoint() = 0;
    virtual TurnSpeed* createTurnSpeed() = 0;
    virtual TurnLane* createTurnLane() = 0;
    virtual ProfAlign* createProfAlign() = 0;
    virtual RawObservationType* createRawObservationType() = 0;
    virtual Curve1* createCurve1() = 0;
    virtual Parcel* createParcel() = 0;
    virtual Line* createLine() = 0;
    virtual Breaklines* createBreaklines() = 0;
    virtual Feature* createFeature() = 0;
    virtual OutSpiral* createOutSpiral() = 0;
    virtual Definition* createDefinition() = 0;
    virtual F* createF() = 0;
    virtual LaserDetails* createLaserDetails() = 0;
    virtual Speeds* createSpeeds() = 0;
    virtual OutletStruct* createOutletStruct() = 0;
    virtual Breakline* createBreakline() = 0;
    virtual Exclusions* createExclusions() = 0;
    virtual PVI* createPVI() = 0;
    virtual TrafficControl* createTrafficControl() = 0;
    virtual Watershed* createWatershed() = 0;
    virtual Corrections* createCorrections() = 0;
    virtual ReducedObservation* createReducedObservation() = 0;
    virtual Watersheds* createWatersheds() = 0;
    virtual CircStruct* createCircStruct() = 0;
    virtual StartofRunoutSta* createStartofRunoutSta() = 0;
    virtual InletStruct* createInletStruct() = 0;
    virtual ControlChecks* createControlChecks() = 0;
    virtual ReducedArcObservation* createReducedArcObservation() = 0;
    virtual GradeModel* createGradeModel() = 0;
    virtual TargetPoint* createTargetPoint() = 0;
    virtual Curve2* createCurve2() = 0;
    virtual DesignSpeed85th* createDesignSpeed85th() = 0;
    virtual PntList2D* createPntList2D() = 0;
    virtual GPSQCInfoLevel2* createGPSQCInfoLevel2() = 0;
    virtual CrashHistory* createCrashHistory() = 0;
    virtual SourceData* createSourceData() = 0;
    virtual PlanFeature* createPlanFeature() = 0;
    virtual Station* createStation() = 0;
    virtual Invert* createInvert() = 0;
    virtual Contours* createContours() = 0;
    virtual Lanes* createLanes() = 0;
    virtual ZoneHinge* createZoneHinge() = 0;
    virtual End* createEnd() = 0;
    virtual AlignPIs* createAlignPIs() = 0;
    virtual AlignPI* createAlignPI() = 0;
    virtual DataPoints* createDataPoints() = 0;
    virtual FullSuperSta* createFullSuperSta() = 0;
    virtual Contour* createContour() = 0;
    virtual AdministrativeDate* createAdministrativeDate() = 0;
    virtual SurveyMonument* createSurveyMonument() = 0;
    virtual ObstructionOffset* createObstructionOffset() = 0;
    virtual GPSSetup* createGPSSetup() = 0;
    virtual Backsight* createBacksight() = 0;
    virtual PointType* createPointType() = 0;
    virtual CrossSects* createCrossSects() = 0;
    virtual Surface* createSurface() = 0;
    virtual Curb* createCurb() = 0;
    virtual Struct* createStruct() = 0;
    virtual WideningLane* createWideningLane() = 0;
    virtual SurveyorCertificate* createSurveyorCertificate() = 0;
    virtual P* createP() = 0;
    virtual IrregularLine* createIrregularLine() = 0;
    virtual TwoWayLeftTurnLane* createTwoWayLeftTurnLane() = 0;
    virtual RawObservation* createRawObservation() = 0;
    virtual TargetSetup* createTargetSetup() = 0;
    virtual Channel* createChannel() = 0;
    virtual PipeFlow* createPipeFlow() = 0;
    virtual PointFile* createPointFile() = 0;
    virtual BacksightPoint* createBacksightPoint() = 0;
    virtual Personnel* createPersonnel() = 0;
    virtual Monument* createMonument() = 0;
    virtual Amendment* createAmendment() = 0;
    virtual InstrumentDetails* createInstrumentDetails() = 0;
    virtual StructFlow* createStructFlow() = 0;
    virtual LandXML* createLandXML() = 0;
    virtual Faces* createFaces() = 0;
    virtual DecisionSightDistance* createDecisionSightDistance() = 0;
    virtual Roadways* createRoadways() = 0;
    virtual FeatureDictionary* createFeatureDictionary() = 0;
    virtual ZoneWidth* createZoneWidth() = 0;
    virtual ParaCurve* createParaCurve() = 0;
    virtual CgPoints* createCgPoints() = 0;
    virtual DesignHour* createDesignHour() = 0;
    virtual ConnSpiral* createConnSpiral() = 0;
    virtual Alignment* createAlignment() = 0;
    virtual POI* createPOI() = 0;
    virtual Alignments* createAlignments() = 0;
    virtual Roadside* createRoadside() = 0;
    virtual PeakHour* createPeakHour() = 0;
    virtual Chain* createChain() = 0;
    virtual ObservationGroup* createObservationGroup() = 0;
    virtual ComplexName* createComplexName() = 0;
    virtual AddressPoint* createAddressPoint() = 0;
    virtual PointType3dReq* createPointType3dReq() = 0;
    virtual PassingLane* createPassingLane() = 0;
    virtual ZoneMaterial* createZoneMaterial() = 0;
    virtual Metric* createMetric() = 0;
    virtual RunoffSta* createRunoffSta() = 0;
    virtual Pipe* createPipe() = 0;
    virtual EndofRunoutSta* createEndofRunoutSta() = 0;
    virtual BeginRunoffSta* createBeginRunoffSta() = 0;
    virtual PipeNetwork* createPipeNetwork() = 0;
    virtual CoordinateSystem* createCoordinateSystem() = 0;
    virtual CrossSect* createCrossSect() = 0;
    virtual PointResults* createPointResults() = 0;
    virtual PostedSpeed* createPostedSpeed() = 0;
    virtual GPSReceiverDetails* createGPSReceiverDetails() = 0;
    virtual PurposeOfSurvey* createPurposeOfSurvey() = 0;
    virtual RoadName* createRoadName() = 0;
    virtual Zone* createZone() = 0;
    virtual StaEquation* createStaEquation() = 0;
    virtual GradeSurface* createGradeSurface() = 0;
    virtual Survey* createSurvey() = 0;
    virtual Imperial* createImperial() = 0;
    virtual BeginRunoutSta* createBeginRunoutSta() = 0;
    virtual DesignSpeed* createDesignSpeed() = 0;
    virtual Connection* createConnection() = 0;
};
}; // namespace : LX
#endif
